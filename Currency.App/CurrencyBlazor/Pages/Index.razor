@page "/"
@using CurrencyApp.EFCore.Models;
@using CurrencyApp.EFCore.Stores;

@inject CurrencyStore currencyStore;
@inject IJSRuntime JsRuntime;
@inject NavigationManager navigationManager;

<PageTitle>Index</PageTitle>

<div class="container pt-5">
    <div class="w-100 d-flex flex-row justify-content-between align-items-center">
        <h4>Currency Table</h4>
        <a href="/create-currency" class="btn btn-success">Create New</a>
    </div>
    @if (IsLoading)
    {
        <p>Loading...</p>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Currency Code</th>
                    <th>Rate</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var currency in AllCurrencies)
                {
                    <tr>
                        <td style="width: 37.5%; vertical-align: middle;">@currency.CurrencyCode</td>
                        <td style="width: 37.5%; vertical-align: middle;">@currency.Rate.ToString("G")</td>
                        <td style="width: 25%;">
                            <div class="d-flex" style="gap: 8px;">
                                <button class="btn btn-primary btn-sm px-3">Edit</button>
                                <button class="btn btn-danger btn-sm px-3" @onclick="() => ConfirmDelete(currency.Id)">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>

@code {
    List<Currency> AllCurrencies = new List<Currency>();
    bool IsLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await Load();
        StateHasChanged();
    }

    private async Task Load()
    {
        IsLoading = true;
        AllCurrencies = await currencyStore.GetAllCurrencies();
        IsLoading = false;
    }

    private async Task ConfirmDelete(int id)
    {
        // I hate blazor for this reason 😂 so much harder to read than real javascript
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");

        if (confirmed)
        {
            await currencyStore.DeleteCurrency(id);
            await Load();

            StateHasChanged();
        }
    }

}